
  <p>
    <label><%= l('setting_checkout_overwrite_description') %></label>
    <%= hidden_field_tag "settings[overwrite_description_#{scm}]", 0 %>
    <%= check_box_tag "settings[overwrite_description_#{scm}]", 1, settings["overwrite_description_#{scm}"].to_i == 1, :onclick => "$($('#settings_description_#{scm}').parents('div').get(2)).slideToggle();" %>
  </p>
    
  <div>
    <p>
      <label><%= l('field_description') %></label>
      <%= text_area_tag "settings[description_#{scm}]", settings["description_#{scm}"], :cols => 60, :rows => 5, :class => 'wiki-edit' %>
    </p>
    <%= wikitoolbar_for "settings_description_#{scm}" %>
  </div>
  
    <p>
      <label><%= l('field_checkout_display_command') %></label>
      <%= hidden_field_tag "settings[display_command_#{scm}]", 0 %>
      <%= check_box_tag "settings[display_command_#{scm}]", 1, settings["display_command_#{scm}"].to_i == 1 %>
    </p>

  <%= javascript_tag do -%>
    <% repo = "Repository::#{scm}".constantize %>
    var subform = new Subform('<%= escape_javascript(
        render(:partial => "checkout_protocol", :locals => {:protocol => Checkout::Protocol.new({:protocol => scm, :append_path => (repo.allow_subtree_checkout? ? '1' : '0'), :command => repo.checkout_default_command}), :scm => scm})) 
      %>',
      <%= settings["protocols_#{scm}"].length || 0 %>,
      'settings_checkout_protocols_<%= scm %>'
    );
    protocolForms['<%= scm %>'] = subform;
  <% end -%>
  <p><label><%=l :label_protocol_plural %></label><%=l :help_checkout_protocols %></p>
  <table class="list checkout_protocol_table">
    <thead><tr>
      <th class="protocol_protocol"         ><%= l(:setting_protocol)%></th>
      <th class="protocol_command"          ><%= l(:setting_checkout_command)%></th>
      <th class="protocol_regex"            ><%= l(:setting_checkout_url_regex) %></th>
      <th class="protocol_regex_replacement"><%= l(:setting_checkout_url_regex_replacement) %></th>
      <th class="protocol_access"           ><%= l(:label_permissions) %></th>
      <th class="protocol_append_path"      ><%= l(:label_append_path) %></th>
      <th class="protocol_display_login"    ><%= l(:label_display_login) %></th>
      <th class="protocol_is_default"       ><%= l(:label_default) %></th>
      <th class="protocol_delete"           ></th>
    </tr></thead>
    <tbody id="settings_checkout_protocols_<%= scm %>">
      <% settings["protocols_#{scm}"].each_with_index do |protocol, index| %>
        <%= render :partial => 'checkout_protocol', :locals => {:protocol => Checkout::Protocol.new(protocol), :scm => scm, :index => index, :classes => cycle('odd', 'even')} %>
      <% end %>
    </tbody>
  </table>
  <div style="text-align: right"><%= link_to_function l(:button_add_protocol), "protocolForms['#{scm}'].add()", {:class => "icon icon-add"} %></div>

